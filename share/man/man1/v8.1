'\" e
.nh   \" Disable hyphenation
.ad l \" Flush-left
.
.\" More obvious tilde: \*~ instead of \(ap
.ds ~ \(ap
.
.\" Monospace text
.de CW
.	ds a \\f(CW
.	ds z \\f1
.	if n \{\
.		ds a `
.		ds z `
.	\}
.	ie \\n(.$>2 \\$1\\*a\\$2\\*z\\$3
.	el \\*(f2   \\*a\\$1\\*z\\$2
..
.\" Describe a V8 flag option
.de V8
.	rr pA
.	rm N
.	if '\\$2'(INTERNAL)' .ds N Internal use only.
.	if '\\$2'(TEST)'     .ds N Testing only.
.	if '\\$2'(WIP)'      .ds N In progress.
.	if '\\$2'|' .nr pA 1
.	if !'\\*N'' .nr pA 1
.	if \\n(pA=1 \{\
.		ds T \\$3
.		ds D \\$4
.	\}
.	dX \\$1
.	TP
\\fB \-\-\\$1 \\fR
.	ie !'\\*T'' \{\
.		B "Type:\t"
\\*T
.		br
.		B "Default:\t"
.		if t .ft CW
\\*D
.		if t .ft
.		if !'\\*N'' \\fB\\*N\\fR
.		sp 1l
.	\}
.	el .if !'\\*N'' \{\
.		B \\*N
.		sp 1l
.	\}
.	rm T
..
.\" GNU Troff: Debug method to trace option definitions
.if \n(.g .if !\n(.C=1 \{\
.	ds V8-OPTS "DEFINED OPTIONS:"
.	de dX
.		if \\nD=1    .tm Defining: \\$1
.		ie d V8_\\$1 .tm Already defined: \\$1
.		el \{\
.			as V8-OPTS \\$1
.			ds V8_\\$1 1
.		\}
.	.
.\}
.
.\"======================================================
.\" BEGIN DOCUMENT
.TH V8 1 2016 V8 V8
.
.SH NAME
.BR v8 " \-\- Google's JavaScript engine"
.
.SH SYNOPSIS
.B v8
.RI [ flags ]
.RB [ "\-\-help " |
.BR \-\-shell ]
.RB [ \-e
.IR string ]
.RI [ file... ]
.br
.B d8
.RI [ flags ]
.RB [ "\-\-help " |
.BR \-\-shell ]
.RI [ file... ]
.
.SH OPTIONS
.TP 6
.BI \-e " string"
Execute \fIstring\fR in V8.
.TP
.BI \-\-shell
Run an interactive JavaScript shell.
.TP
.B \-\-help
Print flags and usage message to stdout, then exit.


.SH V8 FLAGS
Option names beginning with
.RB \(lq no- \(rq
pertain to a boolean V8 flag enabled by default.


.SS Harmony Features
.V8 harmony
Enable all completed harmony features.

.V8 harmony_object_observe
Enable
.CW Object.observe .

.V8 harmony_function_sent
Enable
.CW function.sent .

.V8 harmony_sharedarraybuffer (WIP)
Enable
.CW SharedArrayBuffer .

.V8 harmony_simd (WIP)
Enable
.CW SIMD .

.V8 harmony_do_expressions (WIP)
Enable
.CW do
expressions.

.V8 harmony_regexp_property (WIP)
Enable RegExp Unicode property classes.

.V8 harmony_string_padding (WIP)
Enable String-padding methods.

.V8 harmony_regexp_lookbehind
Enable RegExp lookbehinds.

.V8 harmony_tailcalls
Enable tail-call optimisation.

.V8 harmony_object_values_entries
Enable
.CW Object.values
and
.CW Object.entries .

.V8 harmony_object_own_property_descriptors
Enable
.CW Object.getOwnPropertyDescriptors() .

.V8 harmony_exponentiation_operator
Enable the exponentiation operator
.CW ** .

.V8 no-harmony_array_prototype_values
Disable
.CW Array.prototype.values .

.V8 no-harmony_function_name
Disable function name inference.

.V8 no-harmony_instanceof
Disable
.CW instanceof
support.

.V8 no-harmony_iterator_close
Disable iterator finalisation.

.V8 no-harmony_unicode_regexps
Disable Unicode
'CW /u
modifiers
in regular expressions.

.V8 no-harmony_regexp_exec
Disable RegExp
.CW exec
override behaviour.

.V8 no-harmony_sloppy
Disable harmony features in sloppy mode.

.V8 no-harmony_sloppy_let
Disable
.CW let
in sloppy mode.

.V8 no-harmony_sloppy_function
Disable block-scoping in sloppy mode.

.V8 no-harmony_regexp_subclass
Disable RegExp subclassing.

.V8 no-harmony_restrictive_declarations
Disable limitations on sloppy mode function declarations.

.V8 no-harmony_species
Disable
.CW Symbol.species .



.SS Ignition

.V8 ignition
Use ignition interpreter.

.V8 no-ignition_eager
Disable eager compilation and parsing with ignition.

.V8 ignition_filter | String \&"*"
Filter for ignition interpreter.

.V8 print_bytecode
Print bytecode generated by ignition interpreter.

.V8 trace_ignition
Trace the bytecodes executed by the ignition interpreter.

.V8 trace_ignition_codegen
Trace the codegen of ignition interpreter bytecode handlers.



.SS TurboFan Compiler

.V8 turbo
Enable TurboFan compiler.

.V8 no-turbo_shipping
Disable TurboFan compiler on subset.

.V8 turbo_greedy_regalloc
Use the greedy register allocator.

.V8 turbo_sp_frame_access
Use stack pointer-relative access to frame wherever possible.

.V8 no-turbo_preprocess_ranges
Disable pre-register allocation heuristics.

.V8 no-turbo_loop_stackcheck
Disable stack checks in loops.

.V8 turbo_filter | String \&"\*~\*~"
Optimisation filter for TurboFan compiler.

.V8 trace_turbo
Trace generated TurboFan IR.

.V8 trace_turbo_graph
Trace generated TurboFan graphs.

.V8 trace_turbo_cfg_file | String NULL
Trace turbo cfg graph (for C1 visualiser) to a given filename.

.V8 no-trace_turbo_types
Don't trace TurboFan's types.

.V8 trace_turbo_scheduler
Trace TurboFan's scheduler.

.V8 trace_turbo_reduction
Trace TurboFan's various reducers.

.V8 trace_turbo_jt
Trace TurboFan's jump threading.

.V8 trace_turbo_ceq
Trace TurboFan's control equivalence.

.V8 no-turbo_asm
Disable TurboFan for asm.js code.

.V8 turbo_asm_deoptimization
Enable deoptimisation in TurboFan for asm.js code.

.V8 turbo_verify
Verify TurboFan graphs at each phase.

.V8 turbo_stats
Print TurboFan statistics.

.V8 no-turbo_splitting
Don't split nodes during scheduling in TurboFan.

.V8 no-turbo_types
Disable typed lowering in TurboFan.

.V8 turbo_source_positions
Track source code positions when building TurboFan IR.

.V8 function_context_specialization
Enable function context specialisation in TurboFan.

.V8 no-native_context_specialization
Disable native context specialisation in TurboFan.

.V8 no-turbo_inlining
Disable inlining in TurboFan.

.V8 trace_turbo_inlining
Trace TurboFan inlining.

.V8 no-loop_assignment_analysis
Disable loop assignment analysis.

.V8 turbo_profiling
Enable profiling in TurboFan.

.V8 turbo_verify_allocation
Verify register allocation in TurboFan.

.V8 no-turbo_move_optimization
Don't optimise gap moves in TurboFan.

.V8 no-turbo_jt
Disable jump threading in TurboFan.

.V8 no-turbo_osr
Disable OSR in TurboFan.

.V8 turbo_stress_loop_peeling
Stress loop peeling optimisation.

.V8 no-turbo_cf_optimization
Don't optimise control flow in TurboFan.

.V8 no-turbo_frame_elision
Don't elide frames in TurboFan.

.V8 no-turbo_cache_shared_code
Don't cache context-independent code.

.V8 turbo_preserve_shared_code
Keep context-independent code.

.V8 turbo_escape
Enable escape analysis.

.V8 turbo_instruction_scheduling
Enable instruction scheduling in TurboFan.

.V8 turbo_stress_instruction_scheduling
Randomly schedule instructions to stress dependency tracking.


.SS WebAssembly

.V8 expose_wasm
Expose WASM interface to JavaScript.

.V8 trace_wasm_encoder
Trace encoding of WASM code.

.V8 trace_wasm_decoder
Trace decoding of WASM code.

.V8 trace_wasm_decode_time
Trace decoding time of WASM code.

.V8 trace_wasm_compiler
Trace compiling of WASM code.

.V8 trace_wasm_ast_start | Int 0
Start function for WASM AST trace (inclusive).

.V8 trace_wasm_ast_end | Int 0
End function for WASM AST trace (exclusive).

.V8 skip_compiling_wasm_funcs | Int 0
Start compiling at function
.CW N

.V8 wasm_break_on_decoder_error
Debug break when WASM decoder encounters an error.

.V8 no-wasm_loop_assignment_analysis
Disable loop assignment analysis for WASM.

.V8 enable_simd_asmjs
Enable SIMD.js in asm.js stdlib.

.V8 dump_wasm_module
Dump WASM module bytes.

.V8 dump_wasm_module_path | String NULL
Directory to dump WASM modules to.


.SS Other

.V8 experimental_extras
Enable code compiled in via
.CW v8_experimental_extra_library_files .

.V8 use_strict
Enforce strict mode.

.V8 es_staging (INTERNAL)
Enable test-worthy harmony features.

.V8 compiled_keyed_generic_loads
Use optimising compiler to generate keyed generic load stubs.

.V8 no-allocation_site_pretenuring
Disable pretenuring with allocation sites.

.V8 trace_pretenuring
Trace pretenuring decisions of HAllocate instructions.

.V8 trace_pretenuring_statistics
Trace allocation site pretenuring statistics.

.V8 no-track_fields
Disable tracking of fields with only SMI values.

.V8 no-track_double_fields
Disable tracking of fields with double values.

.V8 no-track_heap_object_fields
Disable tracking of fields with heap values.

.V8 no-track_computed_fields
Disable tracking of computed boilerplate fields.

.V8 no-harmony_instanceof_opt
Disable optimisation for ES6
.CW instanceof
support.

.V8 no-track_field_types
Disable tracking of field types.

.V8 no-smi_binop
Disable support for SMI representation in binary operations.

.V8 optimize_for_size
Enable optimisations which favour memory size over execution speed.

.V8 no-unbox_double_arrays
Don't automatically unbox arrays of doubles.

.V8 no-string_slices
Disable string slices.

.V8 no-crankshaft
Disable Crankshaft.

.V8 hydrogen_filter | String \&"*"
Optimisation filter.

.V8 no-use_gvn
Disable hydrogen global value numbering.

.V8 gvn_iterations | Int 3
Maximum number of GVN fix-point iterations.

.V8 no-use_canonicalizing
Disable hydrogen instruction canonicalising.

.V8 no-use_inlining
Disable function inlining.

.V8 no-use_escape_analysis
Disable hydrogen escape analysis.

.V8 no-use_allocation_folding
Disable allocation folding.

.V8 use_local_allocation_folding
Only fold in basic blocks.

.V8 no-use_write_barrier_elimination
Don't eliminate write barriers targeting allocations in optimised code.

.V8 max_inlining_levels | Int 5
Maximum number of inlining levels.

.V8 max_inlined_source_size | Int 600
Maximum source size (in bytes) considered for a single inlining.

.V8 max_inlined_nodes | Int 196
Maximum number of AST nodes considered for a single inlining.

.V8 max_inlined_nodes_cumulative | Int 400
Maximum cumulative number of AST nodes considered for inlining.

.V8 no-loop_invariant_code_motion
Disable loop invariant code motion.

.V8 no-fast_math
Disable faster (but potentially less accurate) math functions.

.V8 collect_megamorphic_maps_from_stub_cache
Allow Crankshaft to harvest type feedback from stub cache.

.V8 hydrogen_stats
Print statistics for hydrogen.

.V8 trace_check_elimination
Trace check elimination phase.

.V8 trace_environment_liveness
Trace liveness of local variable slots.

.V8 trace_hydrogen
Trace generated hydrogen to file.

.V8 trace_hydrogen_filter | String \&"*"
Hydrogen tracing filter.

.V8 trace_hydrogen_stubs
Trace generated hydrogen for stubs.

.V8 trace_hydrogen_file | String NULL
Trace hydrogen to given filename.

.V8 trace_phase | String \&"HLZ"
Trace generated IR for specified phases.

.V8 trace_inlining
Trace inlining decisions.

.V8 trace_load_elimination
Trace load elimination.

.V8 trace_store_elimination
Trace store elimination.

.V8 trace_alloc
Trace register allocator.

.V8 trace_all_uses
Trace all use positions.

.V8 trace_range
Trace range analysis.

.V8 trace_gvn
Trace global value numbering.

.V8 trace_representation
Trace representation types.

.V8 trace_removable_simulates
Trace removable simulates.

.V8 trace_escape_analysis
Trace hydrogen escape analysis.

.V8 trace_allocation_folding
Trace allocation folding.

.V8 trace_track_allocation_sites
Trace the tracking of allocation sites.

.V8 trace_migration
Trace object migration.

.V8 trace_generalization
Trace map generalization.

.V8 stress_pointer_maps
Stress pointer map for every instruction.

.V8 stress_environments
Stress environment for every instruction.

.V8 deopt_every_n_times | Int 0
Deoptimise every
.CW n
times a deopt point is passed.

.V8 deopt_every_n_garbage_collections | Int 0
Deoptimise every
.CW n
garbage collections.

.V8 print_deopt_stress
Print number of possible deopt points.

.V8 trap_on_deopt
Put a breakpoint before deoptimising.

.V8 trap_on_stub_deopt
Put a breakpoint before deoptimising a stub.

.V8 no-deoptimize_uncommon_cases
Don't deoptimise uncommon cases.

.V8 no-polymorphic_inlining
Disable polymorphic inlining.

.V8 no-use_osr
Disable on-stack replacement.

.V8 no-array_bounds_checks_elimination
Disable array bounds checks elimination (BCE).

.V8 trace_bce
Trace array bounds check elimination.

.V8 array_index_dehoisting
Perform array index dehoisting.

.V8 no-analyze_environment_liveness
Don't analyse liveness of environment slots and zap dead values.

.V8 no-load_elimination
Disable load elimination.

.V8 no-check_elimination
Disable check elimination.

.V8 store_elimination
Use store elimination.

.V8 no-dead_code_elimination
Disable elimination of dead code.

.V8 no-fold_constants
Disable constant folding.

.V8 trace_dead_code_elimination
Trace elimination of dead code.

.V8 no-unreachable_code_elimination
Disable elimination of unreachable code.

.V8 trace_osr
Trace on-stack replacement.

.V8 stress_runs | Int 0
Number of stress runs.

.V8 no-lookup_sample_by_shared
When picking a function to optimise, don't watch for shared function info instead of JSFunction itself.

.V8 flush_optimized_code_cache
Flush the cache of optimised code for closures on every GC.

.V8 no-inline_construct
Disable inline constructor calls.

.V8 no-inline_arguments
Don't inline functions with arguments object.

.V8 no-inline_accessors
Disable inline JavaScript accessors.

.V8 escape_analysis_iterations | Int 2
Maximum number of escape analysis fix-point iterations.

.V8 no-concurrent_recompilation
Don't optimise hot functions asynchronously on separate threads.

.V8 trace_concurrent_recompilation
Track concurrent recompilation.

.V8 concurrent_recompilation_queue_length | Int 8
Set length of the concurrent compilation queue.

.V8 concurrent_recompilation_delay | Int 0
Artificial compilation delay in milliseconds.

.V8 block_concurrent_recompilation
Block queued jobs until released.

.V8 no-omit_map_checks_for_leaf_maps
.\" NOTE: This could be worded better, but I'm not familiar enough with the terminology to know how.
Do not emit check maps for constant values that have a leaf map.

Disables deoptimisation of optimised code when the layout of the maps changes.

.V8 typed_array_max_size_in_heap | Int 64
Threshold for in-heap typed array.

.V8 frame_count | Int 1
Number of stack frames inspected by the profiler.

.V8 interrupt_budget | Int 6144
Execution budget before interrupt is triggered.

.V8 type_info_threshold | Int 25
Percentage of ICs that must have type info to allow optimisation.

.V8 generic_ic_threshold | Int 30
Maximum percentage of megamorphic/generic ICs to allow optimisation.

.V8 self_opt_count | Int 130
Call count before self-optimisation.

.V8 trace_opt_verbose
Enable extra-verbose compilation tracing.

.V8 debug_code
Generate extra code (assertions) for debugging.

.V8 code_comments
Emit comments in code disassembly.

.V8 no-enable_sse3
Disable use of SSE3 instructions.

.V8 no-enable_sse4_1
Disable use of SSE4.1 instructions.

.V8 no-enable_sahf
Disable use of SAHF instruction.
Only relevant to X64.

.V8 no-enable_avx
Disable use of AVX instructions.

.V8 no-enable_fma3
Disable use of FMA3 instructions.

.V8 no-enable_bmi1
Disable use of BMI1 instructions.

.V8 no-enable_bmi2
Disable use of BMI2 instructions.

.V8 no-enable_lzcnt
Disable use of LZCNT instructions.

.V8 no-enable_popcnt
Disable use of POPCNT instructions.

.V8 no-enable_vfp3
Disable use of VFP3 instructions.

.V8 no-enable_armv7
Disable use of ARMv7 instructions.
Only relevant to ARM.

.V8 no-enable_armv8
Disable use of ARMv8 instructions.
Only relevant to ARM 32-bit.

.V8 no-enable_neon
Disable use of NEON instructions.
Only relevant to ARM.

.V8 no-enable_sudiv
Disable use of SDIV and UDIV instructions.
Only relevant to ARM.

.V8 no-enable_mls
Disable use of MLS instructions.
Only relevant to ARM.

.V8 enable_movw_movt
Enable loading 32-bit constant by means of
.CW movw
/
.CW movt
instruction pairs. ARM only.

.V8 no-enable_unaligned_accesses
Disable unaligned accesses for ARMv7.
Only relevant to ARM.

.V8 no-enable_32dregs
Disable use of d16-d31 registers on ARM.
Irrelevant without VFP3.

.V8 enable_vldr_imm
Enable use of constant pools for double immediate.
ARM only.

.V8 force_long_branches
Force all emitted branches to be in long mode.
MIPS/PPC only.

.V8 mcpu | String auto
Enable optimisation for specific CPU.

.V8 expose_natives_as | String NULL
Expose natives in
.CW global
object.

.V8 expose_debug_as | String NULL
Expose debug in
.CW global
object.

.V8 expose_free_buffer
Expose freeBuffer extension.

.V8 expose_gc
Expose gc extension.

.V8 expose_gc_as | String NULL
Expose gc extension under the specified name.

.V8 expose_externalize_string
Expose externalise string extension.

.V8 expose_trigger_failure
Expose trigger-failure extension.

.V8 stack_trace_limit | Int 10
Number of stack frames to capture.

.V8 builtins_in_stack_traces
Show built-in functions in stack traces.

.V8 disable_native_files
Disable builtin natives files.

.V8 no-inline_new
Disable fast inline allocation.

.V8 trace_codegen
Print name of functions for which code is generated.

.V8 trace
Trace function calls.

.V8 no-mask_constants_with_cookie
Don't use random JIT cookie to mask large constants.

.V8 no-lazy
Don't use lazy compilation.

.V8 trace_opt
Trace lazy optimisation.

.V8 trace_opt_stats
Trace lazy optimisation statistics.

.V8 no-opt
Don't use adaptive optimisations.

.V8 always_opt
Always try to optimise functions.

.V8 always_osr
Always try to OSR functions.

.V8 prepare_always_opt
Prepare for turning on always opt.

.V8 trace_deopt
Trace optimise function deoptimisation.

.V8 trace_stub_failures
Trace deoptimisation of generated code stubs.

.V8 no-serialize_toplevel
Disable caching of toplevel scripts.

.V8 serialize_eager
Compile eagerly when caching scripts.

.V8 serialize_age_code
Pre age code in the code cache.

.V8 trace_serializer
Print code serialiser trace.

.V8 min_preparse_length | Int 1024
Minimum length for automatic enable preparsing.

.V8 max_opt_count | Int 10
Maximum number of optimisation attempts before giving up.

.V8 no-compilation_cache
Disable compilation cache.

.V8 no-cache_prototype_transitions
Don't cache prototype transitions.

.V8 cpu_profiler_sampling_interval | Int 1000
CPU profiler sampling interval in microseconds.

.V8 trace_js_array_abuse
Trace out-of-bounds accesses to JavaScript arrays.

.V8 trace_external_array_abuse
Trace out-of-bounds-accesses to external arrays.

.V8 trace_array_abuse
Trace out-of-bounds accesses to all arrays.

.V8 trace_debug_json
Trace debugging JSON request/response.

.V8 no-enable_liveedit
Disable liveedit experimental feature.

.V8 no-hard_abort
Disable aborting by crashing.

.V8 stack_size | Int 984
Default size of stack region V8 is allowed to use (in kilobytes).

.V8 max_stack_trace_source_length | Int 300
Maximum length of function source code printed in a stack trace.

.V8 always_inline_smi_code
Always inline SMI code in non-opt code.

.V8 verify_operand_stack_depth
Emit debug code that verifies the static tracking of the operand stack depth.

.V8 min_semi_space_size | Int 0
Minimum size of a semi-space in megabytes.
The new space consists of twosemi-spaces.

.V8 max_semi_space_size | Int 0
Maximum size of a semi-space in megabytes.
The new space consists of twosemi-spaces.

.V8 semi_space_growth_factor | Int 2
Factor by which to grow the new space.

.V8 experimental_new_space_growth_heuristic
Grow the new space based on the percentage of survivors instead of their absolute value.

.V8 max_old_space_size | Int 0
Maximum size of the old space in megabytes.

.V8 initial_old_space_size | Int 0
Initial old space size in megabytes.

.V8 max_executable_size | Int 0
Maximum size of executable memory in megabytes.

.V8 gc_global
Always perform global GCs.

.V8 gc_interval | Int -1
Garbage collect after
.CW n
allocations.

.V8 retain_maps_for_n_gc | Int 2
Keep maps alive for
.CW n
old space garbage collections.

.V8 trace_gc
Print one trace line following each garbage collection.

.V8 trace_gc_nvp
Print one detailed trace line in
.CW name=value
format after each garbage collection.

.V8 trace_gc_ignore_scavenger
Don't print trace line after scavenger collection.

.V8 trace_idle_notification
Print one trace line following each idle notification.

.V8 trace_idle_notification_verbose
Print the heap state used by the idle notification.

.V8 print_cumulative_gc_stat
Print cumulative GC statistics in
.CW name=value
format on exit.

.V8 print_max_heap_committed
Print statistics of the maximum memory committed for the heap in
.CW name=value
format on exit.

.V8 trace_gc_verbose
Print more details following each garbage collection.

.V8 trace_allocation_stack_interval | Int -1
Print stack trace after
.CW n
free-list allocations.

.V8 trace_fragmentation
Report fragmentation for old space.

.V8 trace_fragmentation_verbose
Report detailed fragmentation for old space.

.V8 trace_evacuation
Report evacuation statistics.

.V8 trace_mutator_utilization
Print mutator utilisation, allocation speed, gc speed.

.V8 no-weak_embedded_maps_in_optimized_code
Don't make maps embedded in optimised code weak.

.V8 no-weak_embedded_objects_in_optimized_code
Don't make objects embedded in optimized code weak.

.V8 no-flush_code
Don't flush code that's not expected to be reused.

.V8 trace_code_flushing
Trace code flushing progress.

.V8 no-age_code
Don't track un-executed functions to age code.

.V8 no-incremental_marking
Disable incremental marking.

.V8 min_progress_during_incremental_marking_finalization | Int 32
Keep finalising incremental marking as long as
.CW n
unmarked objects (or more) are discovered.

.V8 max_incremental_marking_finalization_rounds | Int 3
Maximum number of attempts to finalise incremental marking.

.V8 no-black_allocation
Disable black allocation.

.V8 no-concurrent_sweeping
Disable concurrent sweeping.

.V8 no-parallel_compaction
Disable parallel compaction.

.V8 no-parallel_pointer_update
Disable parallel pointer update during compaction.

.V8 trace_incremental_marking
Trace progress of the incremental marking.

.V8 track_gc_object_stats
Track object counts and memory usage.

.V8 trace_gc_object_stats
Trace object counts and memory usage.

.V8 no-track_detached_contexts
Don't track native contexts that are expected to be garbage collected.

.V8 trace_detached_contexts
Trace native contexts that are expected to be garbage collected.

.V8 no-move_object_start
Disable moving of object starts.

.V8 no-memory_reducer
Disable memory reducer.

.V8 no-scavenge_reclaim_unmodified_objects
Don't remove unmodified and unreferenced objects.

.V8 heap_growing_percent | Int 0
Specify heap growing factor as
.EQ
( 1 + n / 100 ).
.EN

.V8 histogram_interval | Int 600000
Time interval for aggregating memory histograms (in milliseconds).

.V8 trace_object_groups
Print object groups detected during each garbage collection.

.V8 heap_profiler_trace_objects
Dump heap object allocations/movements/size_updates.

.V8 sampling_heap_profiler_suppress_randomness
Use constant sample intervals to eliminate test flakiness.

.V8 no-use_idle_notification
Don't use idle notification to reduce memory footprint.

.V8 no-use_ic
Disable inline caching.

.V8 trace_ic
Trace inline cache state transitions.

.V8 native_code_counters
Generate extra code for manipulating stats counters.

.V8 always_compact
Perform compaction on every full GC.

.V8 never_compact (TEST)
Never perform compaction on full GC.

.V8 no-compact_code_space
Don't compact code space on full collections.

.V8 no-cleanup_code_caches_at_gc
Don't flush inline caches prior to mark compact collection,
or flush code caches in maps during mark compact cycle.

.V8 no-use_marking_progress_bar
Don't use a progress bar to scan large objects in increments when incremental marking is active.

.V8 zap_code_space
Zap free memory in code space with
.CW 0xCC
while sweeping.

.V8 random_seed | Int 0
Default seed for initialising random generator.
.CW 0
means to use system random.

.V8 trace_weak_arrays
Trace WeakFixedArray usage.

.V8 no-track_prototype_users
Don't keep track of which maps refer to a given prototype object.

.V8 trace_prototype_users
Trace updates to prototype user tracking.

.V8 no-eliminate_prototype_chain_checks
Don't collapse prototype chain checks into single-cell checks.

.V8 no-use_verbose_printer
Disable verbose printing.

.V8 trace_for_in_enumerate
Trace
.CW for-in
enumerate slow-paths.

.V8 allow_natives_syntax
Allow natives syntax.

.V8 trace_parse
Trace parsing and preparsing.

.V8 trace_sim
Trace simulator execution.

.V8 debug_sim
Enable debugging of the simulator.

.V8 check_icache
Check icache flushes in ARM and MIPS simulator.

.V8 stop_sim_at | Int 0
Stop simulator after
.CW x
number of instructions.

.V8 sim_stack_alignment | Int 8
Stack alignment (in bytes) in simulator.
Either
.CW 4 \ or
.CW 8 \ (default).

.V8 sim_stack_size | Int 2048
Stack size of the ARM64, MIPS64 and PPC64 simulator in kilobytes.
Default is 2 MB.

.V8 no-log_regs_modified
Don't print modified registers when logging register values.

.V8 no-log_colour
Disable coloured output when logging.

.V8 ignore_asm_unimplemented_break
Don't break for ASM_UNIMPLEMENTED_BREAK macros.

.V8 trace_sim_messages
Trace simulator debug messages. Implied by \fB--trace-sim\fR.

.V8 stack_trace_on_illegal
Print stack trace when an illegal exception is thrown.

.V8 abort_on_uncaught_exception
Abort program (dump core) when an uncaught exception is thrown.

.V8 no-randomize_hashes
Don't randomise hashes to avoid predictable hash collisions.

.V8 hash_seed | Int 0
Fixed seed to use to hash property keys.
.CW 0
means random.

With snapshots, this option cannot override the baked-in seed.

.V8 runtime_call_stats
Report runtime call counts and times.

.V8 profile_deserialization
Print the time it takes to deserialise the snapshot.

.V8 serialization_statistics
Collect statistics on serialised objects.

.V8 no-regexp_optimization
Disable generation of optimised regexp code.

.V8 testing_bool_flag | Bool true
(Unknown)

.V8 testing_maybe_bool_flag | maybe_bool unset
(Unknown)

.V8 testing_int_flag | Int 13
(Unknown)

.V8 testing_float_flag | Float 2.5
(Unknown)

.V8 testing_string_flag | String \&"Hello,\ world!"
(Unknown)

.V8 testing_prng_seed | Int 42
Seed used for threading test randomness.

.V8 testing_serialization_file | String \&"/tmp/serdes"
File in which to serialise heap.

.V8 startup_src | String NULL
Write V8 startup as C++ source. mksnapshot only.

.V8 startup_blob | String NULL
Write V8 startup blob file. mksnapshot only.

.V8 profile_hydrogen_code_stub_compilation
Print the time it takes to lazily compile hydrogen code stubs.

.V8 predictable
Enable predictable mode.

.V8 force_marking_deque_overflows
Force overflows of marking deque by reducing its size to 64 words.

.V8 stress_compaction
Stress the GC compactor to flush out bugs.
Implies \fB--force_marking_deque_overflows\fR.

.V8 manual_evacuation_candidates_selection
Test mode only flag. It allows a unit test to select evacuation candidates pages.
Requires \fB--stress_compaction\fR.

.V8 external_allocation_limit_incremental_time | Int 1
Time spent in incremental marking steps (in milliseconds) once the external allocation limit is reached.

.V8 disable_old_api_accessors
Disable old-style API accessors whose setters trigger through the prototype chain.

.V8 dump_counters
Dump counters on exit.

.V8 map_counters | String \&""
Map counters to a file.

.V8 js_arguments | Arguments \&""
Pass all remaining arguments to the script. Alias for
.CW -- .

.V8 gdbjit
Enable GDBJIT interface.

.V8 gdbjit_full
Enable GDBJIT interface for all code objects.

.V8 gdbjit_dump
Dump elf objects with debug info to disk.

.V8 gdbjit_dump_filter | String \&""
Dump only objects containing this substring.

.V8 log
Minimal logging without API, code, GC, suspect, or sample-handling.

.V8 log_all
Log all events to the log file.

.V8 log_api
Log API events to the log file.

.V8 log_code
Log code events to the log file without profiling.

.V8 log_gc
Log heap samples on garbage collection for the hp2ps tool.

.V8 log_handles
Log global handle events.

.V8 log_suspect
Log suspect operations.

.V8 prof
Log statistical profiling information. Implies \fB--log-code\fR.

.V8 prof_cpp
Like \fB--prof\fR, but ignore generated code.

.V8 no-prof_browser_mode
Disable browser-compatible mode for profiling when using \fB--prof\fR.

.V8 no-log_regexp
Log regular expression execution.

.V8 logfile | String \&"v8.log"
Specify name of the log file.

.V8 no-logfile_per_isolate
Don't separate log files for each isolate.

.V8 ll_prof
Enable low-level Linux profiler.

.V8 perf_basic_prof
Enable perf Linux profiler (basic support).

.V8 perf_basic_prof_only_functions
Only report function code ranges to perf (i.e. no stubs).

.V8 perf_prof
Enable perf Linux profiler (experimental annotate support).

.V8 perf_prof_debug_info
Enable debug info for perf Linux profiler (experimental).

.V8 gc_fake_mmap | String \&"/tmp/__v8_gc__"
Specify the name of the file for fake gc mmap used in
.CW ll_prof .

.V8 log_internal_timer_events
Time internal events.

.V8 log_timer_events
Time events, including external callbacks.

.V8 log_instruction_stats
Log AArch64 instruction statistics.

.V8 log_instruction_file | String \&"arm64_inst.csv"
AArch64 instruction statistics log file.

.V8 log_instruction_period | Int 4194304
AArch64 instruction statistics logging period.

.V8 redirect_code_traces
Output deopt information and disassembly into file
.CW code-<pid>-<isolate\ id>.asm .

.V8 redirect_code_traces_to | String NULL
Output deopt information and disassembly into the given file.

.V8 hydrogen_track_positions
Track source code positions when building IR.


.SH SEE ALSO
.BR node (1)
