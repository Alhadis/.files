'\" e
.nh   \" Disable hyphenation
.ad l \" Flush-left
.
.\" Adaptive monospace fonts
.ie t \{
.	ds `  \\f(CR
.	ds '  \\fP
.	ds C? \\f(CR
.	ds C! \\f(CR
.	ds CW \\f(CR
.	ds CI \\f(CI
.	ds CB \\f(CB
.	ie \\n(.g .ds CE \\f[CBI]
.	el        .ds CE \\f(CB \}
.el \{
.	ds `  \\(lq\\fI
.	ds '  \\fP\\(rq
.	ds C? \\fI
.	ds C! \\fB
.	ds CW \\f1
.	ds CI \\fI
.	ds CB \\fB
.	ds CE \\f(BI \}
.\" End of font setup
.
.\" Whether HTML is the targeted output medium
.if '\*(.T'html'  .nr H 1
.if '\*(.T'xhtml' .nr H 1
.
.\" More obvious tilde: \*~ instead of \(ap
.ds ~ \(ap
.
.\" Nicer-looking C++ (taken from Pod headers)
.ie t .ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.el   .ds C+ C++
.
.
.\" Monospace text
.de ``
.	ds a \\f(CW
.	ds z \\f1
.	if n \{\
.		ds a `
.		ds z `
.	\}
.	ie \\n(.$>2 \\$1\\*a\\$2\\*z\\$3
.	el \\*(f2   \\*a\\$1\\*z\\$2
..
.
.\" Variable reference
.de VAR
.	ds a \\$1
.	ds z \\$2
'	if \\n(.$>2 'if 'R'\\$1' \{\
'		ds a \\$2
'		ds z \\$3 \}
.
.	\" HTML output: generate a real variable tag
.	ie \\nH=1 \{\
.		HTML <var>
.		ie \\n(.u=0 \\*a
.		el  \h'-1n'\\*a\h'-1n'
.		HTML </var>
.		ie \\n(.u=0 \\*z
.		el \h'-1n'\\*z
.	\}
.
.	\" Everything else: italicise name
.	el \\*(CI\\*a\\fP\\*z
.	rm a
.	rm z
..
.
.\" Bare URL, underlined or hyperlinked
.de LK
.	ie t \{\
.		UR \\$1
.		UE \\$2 \}
.	el \\fI\\$1\\fP\\$2
..
.
.\" JavaScript object
.de JS
'	ds s https://mdn.io/\\$1
'	ds n \\*(C?\\$1\\fP\\$2
'	ie \\nH=1 <a href="\\*s"><code>\\$1</code></a>\\$2
'	el .ie t \{\
'		UR \\*s
\\*n
'		UE \}
'	el \\*(CR\\$1\fP\\$2
.	rm s
.	rm n
..
.
.\" Describe a V8 flag option
.de V8
.	rr pA
.	rm N
.	if '\\$2'(INTERNAL)' .ds N Internal use only.
.	if '\\$2'(TEST)'     .ds N Testing only.
.	if '\\$2'(WIP)'      .ds N In progress.
.	if '\\$2'|' .nr pA 1
.	if !'\\*N'' .nr pA 1
.	if \\n(pA=1 \{\
.		ds T \\$3
.		ds D \\$4
.	\}
.	dX \\$1
.	TP
\\fB \-\-\\$1 \\fR
.	ie !'\\*T'' \{\
.		B "Type:\t"
\\*T
.		br
.		B "Default:\t"
.		if t .ft CW
\\*D
.		if t .ft
.		if !'\\*N'' \\fB\\*N\\fR
.		sp 1l
.	\}
.	el .if !'\\*N'' \{\
.		B \\*N
.		sp 1l
.	\}
.	rm T
..
.\" GNU Troff: Debug method to trace option definitions
.if \n(.g .if !\n(.C=1 \{\
.	ds V8-OPTS "DEFINED OPTIONS:"
.	de dX
.		if \\nD=1    .tm Defining: \\$1
.		ie d V8_\\$1 .tm Already defined: \\$1
.		el \{\
.			as V8-OPTS \\$1
.			ds V8_\\$1 1
.		\}
.	.
.\}
.
.\"======================================================
.\" BEGIN DOCUMENT
.TH V8 1 "September 19, 2019" "V8 7.7.299.11" V8
.
.SH NAME
.BR v8 " \(em Google\(cqs JavaScript engine
.
.SH SYNOPSIS
.B shell
.RI [ options ]
.RB [ \-\-shell ]
.RI [ file... ]
.br
.B d8
.RI [ options ]
.RB [ \-e
.IR string ]
.RB [ \-\-shell ]
.RI [[ "\fB\-\-module\fP" ] " file..." ]
.
.SH OPTIONS
.TP 6
.B \-\-
Capture all remaining arguments in JavaScript.
.TP 6
.BI \-e " string"
Execute \fIstring\fR in V8.
.TP
.BI \-\-shell
Run an interactive JavaScript shell.
.TP
.B \-\-help
Print flags and usage message to stdout, then exit.
.TP
.B \-\-module
Execute \fIfile\fR as a JavaScript module.
.IP
Note: the \fB--module\fP option is implicitly enabled for \*(CW*.mjs\fP files.


.SH V8 FLAGS
Option names beginning with
.RB \(lq no- \(rq
pertain to a boolean V8 flag enabled by default.

.\" BEGIN SCRAPE
.V8 abort-on-uncaught-exception
Abort program (dump core) when an uncaught exception is thrown.

.V8 no-allocation-site-pretenuring
Don\(cqt pretenure with allocation sites.

.V8 allow-natives-syntax
Allow natives syntax.

.V8 allow-unsafe-function-constructor
Allow invoking the function constructor without security checks.

.V8 always-compact
Perform compaction on every full GC.

.V8 always-opt
Always try to optimize functions.

.V8 always-osr
Always try to OSR functions.

.V8 no-analyze-environment-liveness
Don\(cqt analyze liveness of environment slots and zap dead values.

.V8 arm-arch | String \(lqarmv8\(rq
Generate instructions for the selected ARM architecture if available: armv6, armv7, armv7+sudiv or armv8.

.V8 asm-wasm-lazy-compilation
Enable lazy compilation for asm-wasm modules.

.V8 assert-types
Generate runtime type assertions to test the typer.

.V8 assume-asmjs-origin
Force WASM decoder to assume input is internal asm-wasm format.

.V8 no-async-stack-traces
Exclude async stack traces in
.JS Error.stack .

.V8 block-concurrent-recompilation
Block queued jobs until released.

.V8 budget-for-feedback-vector-allocation | Int 1024
The budget in amount of bytecode executed by a function before we decide to allocate feedback vectors.

.V8 builtins-in-stack-traces
Show built-in functions in stack traces.

.V8 no-cache-prototype-transitions
Don\(cqt cache prototype transitions.

.V8 check-icache
Check icache flushes in ARM and MIPS simulator.

.V8 clear-exceptions-on-js-entry
Clear pending exceptions when entering JavaScript.

.V8 clear-free-memory
Initialize free memory with 0.

.V8 code-comments
Emit comments in code disassembly; for more readable source positions you should add \*(C!--no-concurrent-recompilation\fP.

.V8 no-compact-code-space
Don\(cqt compact code space on full collections.

.V8 no-compilation-cache
Disable compilation cache.

.V8 compiler-dispatcher
Enable compiler dispatcher.

.V8 no-concurrent-array-buffer-freeing
Don\(cqt free array buffer allocations on a background thread.

.V8 concurrent-inlining
Run optimizing compiler\(cqs inlining phase on a separate thread.

.V8 no-concurrent-marking
Don\(cqt use concurrent marking.

.V8 no-concurrent-recompilation
Force synchronous optimisation of hot functions.

.V8 concurrent-recompilation-delay | Int 0
Artificial compilation delay in ms.

.V8 concurrent-recompilation-queue-length | Int 8
The length of the concurrent compilation queue.

.V8 no-concurrent-store-buffer
Don\(cqt use concurrent store buffer processing.

.V8 no-concurrent-sweeping
Don\(cqt use concurrent sweeping.

.V8 correctness-fuzzer-suppressions
Suppress certain unspecified behaviours to ease correctness fuzzing:
abort program when the stack overflows or a string exceeds maximum length (as opposed to throwing
.JS RangeError),
and use a fixed suppression string for error messages.

.V8 cpu-profiler-sampling-interval | Int 1000
CPU profiler sampling interval in microseconds.

.V8 csa-trap-on-node | String NULL
Trigger break point when a node with given id is created in given stub.
The format is:
.`` StubName,NodeId .

.V8 debug-code
Generate extra code (assertions) for debugging.

.V8 debug-sim
Enable debugging the simulator.

.V8 deopt-every-n-times | Int 0
Deoptimize every n times a deopt point is passed.

.V8 detailed-error-stack-trace
Include arguments for each function call in the error stack frames array.

.V8 detailed-line-info
Always generate detailed line information for CPU profiling.

.V8 no-detect-ineffective-gcs-near-heap-limit
Don\(cqt trigger out-of-memory failure to avoid GC storm near heap limit.

.V8 disable-abortjs
Disable AbortJS runtime function.

.V8 disable-old-api-accessors
Disable old-style API accessors whose setters trigger through the prototype chain.

.V8 disallow-code-generation-from-strings
Disallow
.`` eval
and friends.

.V8 dump-counters
Dump counters on exit.

.V8 dump-counters-nvp
Dump counters as name-value pairs on exit.

.V8 dump-wasm-module-path | String NULL
Directory to dump WASM modules to.

.V8 embedded-src | String NULL
Path for the generated embedded data file.
(\*(C!mksnapshot\fP only).

.V8 embedded-variant | String NULL
Label to disambiguate symbols in embedded data file.
(\*(C!mksnapshot\fP only).

.V8 enable-32dregs | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 enable-armv7 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 enable-armv8 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-avx
Disable use of AVX instructions if available.

.V8 no-enable-bmi1
Disable use of BMI1 instructions if available.

.V8 no-enable-bmi2
Disable use of BMI2 instructions if available.

.V8 no-enable-fma3
Disable use of FMA3 instructions if available.

.V8 enable-lazy-source-positions
Skip generating source positions during initial compile, but regenerate when actually required.

.V8 no-enable-lzcnt
Disable use of LZCNT instruction if available.

.V8 enable-neon | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 no-enable-one-shot-optimization
Disable size optimizations for the code that will only be executed once.

.V8 no-enable-popcnt
Disable use of POPCNT instruction if available.

.V8 no-enable-regexp-unaligned-accesses
Disable unaligned accesses for the regexp engine.

.V8 no-enable-sahf
Disable use of SAHF instruction if available (X64 only).

.V8 enable-source-at-csa-bind
Include source information in the binary at CSA bind locations.

.V8 no-enable-sse3
Disable use of SSE3 instructions if available.

.V8 no-enable-sse4-1
Disable use of SSE4.1 instructions if available.

.V8 no-enable-sse4-2
Disable use of SSE4.2 instructions if available.

.V8 no-enable-ssse3
Disable use of SSSE3 instructions if available.

.V8 enable-sudiv | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 enable-vfp3 | maybe_bool unset
Deprecated (use \*(C!--arm-arch\fP instead).

.V8 ephemeron-fixpoint-iterations | Int 10
Number of fixpoint iterations it takes to switch to linear ephemeron algorithm.

.V8 es-staging (INTERNAL)
Enable test-worthy Harmony features.

.V8 no-experimental-inline-promise-constructor
Don\(cqt inline the
.JS Promise
constructor in TurboFan.

.V8 experimental-new-space-growth-heuristic
Grow the new space based on the percentage of survivors instead of their absolute value.

.V8 experimental-stack-trace-frames
Enable experimental frames (API/Builtins) and stack trace layout.

.V8 experimental-wasm-anyref
Enable prototype anyref opcodes for WASM.

.V8 experimental-wasm-bigint
Enable prototype JS
.JS BigInt
support for WASM.

.V8 no-experimental-wasm-bulk-memory
Disable prototype bulk memory opcodes for WASM.

.V8 experimental-wasm-compilation-hints
Enable prototype compilation hints section for WASM.

.V8 experimental-wasm-eh
Enable prototype exception handling opcodes for WASM.

.V8 experimental-wasm-mv
Enable prototype multi-value support for WASM.

.V8 experimental-wasm-return-call
Enable prototype return call opcodes for WASM.

.V8 no-experimental-wasm-sat-f2i-conversions
Disable prototype saturating float conversion opcodes for WASM.

.V8 no-experimental-wasm-se
Disable prototype sign extension opcodes for WASM.

.V8 experimental-wasm-simd
Enable prototype SIMD opcodes for WASM.

.V8 experimental-wasm-threads
Enable prototype thread opcodes for WASM.

.V8 experimental-wasm-type-reflection
Enable prototype WASM type reflection in JS for WASM.

.V8 expose-async-hooks
Expose
.`` async_hooks
object.

.V8 expose-cputracemark-as | String NULL
Expose
.`` cputracemark
extension under the specified name.

.V8 expose-externalize-string
Expose externalize string extension.

.V8 expose-free-buffer
Expose
.`` freeBuffer
extension.

.V8 expose-gc
Expose
.`` gc
extension.

.V8 expose-gc-as | String NULL
Expose
.`` gc
extension under the specified name.

.V8 expose-inspector-scripts
Expose
.`` injected-script-source.js
for debugging.

.V8 expose-trigger-failure
Expose trigger-failure extension.

.V8 no-expose-wasm
Don\(cqt expose WASM interface to JavaScript.

.V8 no-fast-calls-with-arguments-mismatches
Don\(cqt skip arguments adaptor frames when it\(cqs provably safe.

.V8 no-fast-math
Don\(cqt enable faster, potentially less accurate, math functions.

.V8 fast-promotion-new-space
Fast promote new space on high survival rates.

.V8 feedback-normalization
Feed back normalization to constructors.

.V8 no-flush-bytecode
Don\(cqt flush bytecode that hasn\(cqt executed recently.

.V8 force-long-branches
Force all emitted branches to be in long mode (MIPS/PPC only).

.V8 force-marking-deque-overflows
Force overflows of marking deque by reducing its size to 64 words.

.V8 force-slow-path
Always take the slow path for builtins.

.V8 frame-count | Int 1
Number of stack frames inspected by the profiler.

.V8 function-context-specialization
Enable function context specialization in TurboFan.

.V8 future
Implies all staged features that we want to ship in the not-too-far future.

.V8 fuzzer-gc-analysis
Print number of allocations and enable analysis mode for GC fuzz-testing, e.g. \*(C!--stress-marking\fP, \*(C!--stress-scavenge\fP.

.V8 fuzzer-random-seed | Int 0
Default seed for initializing fuzzer random generator (0, the default, means to use v8\(cqs random number generator seed).

.V8 gc-experiment-background-schedule
Use new background GC schedule heuristics.

.V8 gc-experiment-less-compaction
Use less compaction in non-memory reducing mode.

.V8 gc-fake-mmap | String \(lq/tmp/__v8_gc__\(rq
Specify the name of the file for fake gc mmap used in
.`` ll_prof .

.V8 gc-freelist-strategy | Int 0
Freelist strategy to use.
\*(C?1\fP selects \*(C!FreeListFastAlloc\fP,
\*(C?2\fP selects \*(C!FreeListMany\fP,
and any other value selects \*(C!FreeListLegacy\fP.

.V8 gc-global
Always perform global GCs.

.V8 gc-interval | Int -1
Garbage collect after
.VAR N
allocations.

.V8 gc-stats | Int 0
Used by tracing internally to enable gc statistics.

.V8 gdbjit
Enable GDBJIT interface.

.V8 gdbjit-dump
Dump ELF objects with debug info to disk.

.V8 gdbjit-dump-filter
Dump only objects containing this substring.

.V8 gdbjit-full
Enable GDBJIT interface for all code objects.

.V8 no-global-gc-scheduling
Disable GC scheduling based on global memory.

.V8 no-hard-abort
Don\(cqt abort by crashing.

.V8 harmony
Enable all completed Harmony features.

.V8 no-harmony-dynamic-import
Disable dynamic import.

.V8 no-harmony-import-meta
Disable
.JS import.meta
property.

.V8 harmony-intl-add-calendar-numbering-system
Add \f(CWcalendar\fP and \f(CWnumberingSystem\fP to
.JS DateTimeFormat .

.V8 no-harmony-intl-bigint
Disable
.JS BigInt.prototype.toLocaleString .

.V8 no-harmony-intl-date-format-range
Disable
.JS DateTimeFormat.formatRange .

.V8 harmony-intl-dateformat-day-period
Add
.`` dayPeriod
option to
.JS DateTimeFormat .

.V8 harmony-intl-dateformat-fractional-second-digits
Add
.`` fractionalSecondDigits
option to
.JS DateTimeFormat .

.V8 harmony-intl-dateformat-quarter (WIP)
Add
.`` quarter
option to
.JS DateTimeFormat .

.V8 no-harmony-intl-datetime-style
Disable \f(CWdateStyle\fP and \f(CWtimeStyle\fP for
.JS DateTimeFormat .

.V8 no-harmony-intl-numberformat-unified
Disable unified
.JS Intl.NumberFormat
features.

.V8 harmony-intl-segmenter
Enable
.JS Intl.Segmenter .

.V8 no-harmony-namespace-exports
Disable namespace exports (\f(CWexport * as foo from "bar"\fP).

.V8 no-harmony-numeric-separator
Disable numeric separator between digits.

.V8 harmony-private-methods (WIP)
Enable private methods in class literals.

.V8 no-harmony-promise-all-settled
Disable
.JS Promise.allSettled .

.V8 harmony-regexp-sequence (WIP)
Enable RegExp Unicode sequence properties.

.V8 no-harmony-sharedarraybuffer
Disable
.JS SharedArrayBuffer .

.V8 no-harmony-shipping
Disable all shipped Harmony features.

.V8 harmony-weak-refs (WIP)
Enable weak references.

.V8 hash-seed | Uint64 0
Fixed seed to use to hash property keys (0 means random).
With snapshots this option cannot override the baked-in seed.

.V8 heap-growing-percent | Int 0
Specifies heap growing factor as
.EQ
( 1 + heap_growing_percent / 100 ).
.EN

.V8 heap-profiler-trace-objects
Dump heap object allocations/movements/size_updates.

.V8 no-heap-profiler-use-embedder-graph
Don\(cqt use the new EmbedderGraph API to get embedder nodes.

.V8 heap-snapshot-string-limit | Int 1024
Truncate strings to this length in the heap snapshot.

.V8 histogram-interval | Int 600000
Time interval in ms for aggregating memory histograms.

.V8 huge-max-old-generation-size
Increase maximum size of the old space to 4 GB for x64 systems with the physical memory bigger than 16 GB.

.V8 no-icu-timezone-data
Don\(cqt get information about timezones from ICU.

.V8 no-idle-time-scavenge
Don\(cqt perform scavenges in idle time.

.V8 no-ignition-elide-noneffectful-bytecodes
Don\(cqt elide bytecodes which won\(cqt have any external effect.

.V8 no-ignition-filter-expression-positions
Don\(cqt filter expression positions before the bytecode pipeline.

.V8 no-ignition-reo
Don\(cqt use ignition register equivalence optimizer.

.V8 no-ignition-share-named-property-feedback
Don\(cqt share feedback slots when loading the same named property from the same object.

.V8 ignore-asm-unimplemented-break
Don\(cqt break for
.`` ASM_UNIMPLEMENTED_BREAK
macros.

.V8 no-incremental-marking
Don\(cqt use incremental marking.

.V8 no-incremental-marking-wrappers
Don\(cqt use incremental marking for marking wrappers.

.V8 initial-old-space-size | size_t 0
Initial old space size (in MBytes).

.V8 no-inline-accessors
Don\(cqt inline JavaScript accessors.

.V8 no-inline-new
Don\(cqt use fast inline allocation.

.V8 interpreted-frames-native-stack
Show interpreted frames on the native stack (useful for external profilers).

.V8 interrupt-budget | Int 147456
Interrupt budget which should be used for the profiler counter.

.V8 jitless
Disable runtime allocation of executable memory.

.V8 no-lazy
Don\(cqt use lazy compilation.

.V8 no-lazy-feedback-allocation
Don\(cqt allocate feedback vectors lazily.

.V8 liftoff
Enable Liftoff, the baseline compiler for WebAssembly.

.V8 lite-mode
Enable trade-off of performance for memory savings.

.V8 ll-prof
Enable low-level Linux profiler.

.V8 log
Minimal logging (no API, code, GC, suspect, or handles samples).

.V8 log-all
Log all events to the log file.

.V8 log-api
Log API events to the log file.

.V8 log-code
Log code events to the log file without profiling.

.V8 no-log-colour
Don\(cqt use coloured output when logging.

.V8 log-function-events
Log function events (parse, compile, execute) separately.

.V8 log-handles
Log global handle events.

.V8 log-instruction-file | String \(lqarm64_inst.csv\(rq
AArch64 instruction statistics log file.

.V8 log-instruction-period | Int 4194304
AArch64 instruction statistics logging period.

.V8 log-instruction-stats
Log AArch64 instruction statistics.

.V8 log-internal-timer-events
Time internal events.

.V8 log-source-code
Log source code.

.V8 log-suspect
Log suspect operations.

.V8 logfile | String \(lqv8.log\(rq
Specify the name of the log file.

.V8 no-logfile-per-isolate
Use a single log-file for each isolate.

.V8 manual-evacuation-candidates-selection
Test mode only flag.
It allows a unit test to select evacuation candidates pages (requires \*(C!--stress-compaction\fP).

.V8 map-counters
Map counters to a file.

.V8 max-heap-size | size_t 0
Maximum size of the heap (in MBytes).
Both \*(C!--max-semi-space-size\fP and \*(C!--max-old-space-size\fP take precedence.
All three flags cannot be specified at the same time.

.V8 max-inlined-bytecode-size | Int 500
Maximum size of bytecode for a single inlining.

.V8 max-inlined-bytecode-size-absolute | Int 5000
Maximum cumulative size of bytecode considered for inlining.

.V8 max-inlined-bytecode-size-cumulative | Int 1000
Maximum cumulative size of bytecode considered for inlining.

.V8 max-inlined-bytecode-size-small | Int 30
Maximum size of bytecode considered for small function inlining.

.V8 max-lazy
Ignore eager compilation hints.

.V8 max-old-space-size | size_t 0
Maximum size of the old space (in MBytes).

.V8 max-optimized-bytecode-size | Int 61440
Maximum bytecode size to be considered for optimization; too high values may cause the compiler to hit (release) assertions.

.V8 max-polymorphic-map-count | Int 4
Maximum number of maps to track in \*(CWPOLYMORPHIC\fP state.

.V8 max-semi-space-size | size_t 0
Maximum size of a semi-space (in MBytes), the new space consists of two semi-spaces.

.V8 max-stack-trace-source-length | Int 300
Maximum length of function source code printed in a stack trace.

.V8 mcpu | String \(lqauto\(rq
Enable optimisation for a specific CPU.

.V8 no-memory-reducer
Don\(cqt use memory reducer.

.V8 no-memory-reducer-for-small-heaps
Don\(cqt use memory reducer for small heaps.

.V8 min-inlining-frequency | Float 0.15
Minimum frequency for inlining.

.V8 min-semi-space-size | size_t 0
Minimum size of a semi-space (in MBytes), the new space consists of two semi-spaces.

.V8 minor-mc
Perform young generation mark compact GCs.

.V8 no-minor-mc-parallel-marking
Don\(cqt use parallel marking for the young generation.

.V8 mock-arraybuffer-allocator
Use a mock
.JS ArrayBuffer
allocator for testing.

.V8 mock-arraybuffer-allocator-limit | size_t 0
Memory limit for mock
.JS ArrayBuffer
allocator used to simulate OOM for testing.

.V8 no-modify-field-representation-inplace
Disable in-place field representation updates.

.V8 no-move-object-start
Disable moving of object starts.

.V8 native-code-counters
Generate extra code for manipulating stats counters.

.V8 never-compact (TEST)
Never perform compaction on full GC.

.V8 no-opt
Don\(cqt use adaptive optimizations.

.V8 optimize-for-size
Enable optimisations which favour memory size over execution speed.

.V8 no-page-promotion
Don\(cqt promote pages based on utilization.

.V8 page-promotion-threshold | Int 70
Minimum percentage of live bytes on a page to enable fast evacuation.

.V8 no-parallel-compaction
Don\(cqt use parallel compaction.

.V8 parallel-compile-tasks
Enable parallel compile tasks.

.V8 no-parallel-marking
Don\(cqt use parallel marking in atomic pause.

.V8 no-parallel-pointer-update
Don\(cqt use parallel pointer update during compaction.

.V8 no-parallel-scavenge
Disable parallel scavenging.

.V8 parse-only
Only parse the sources.

.V8 no-partial-constant-pool
Disable use of partial constant pools (X64 only).

.V8 perf-basic-prof
Enable perf Linux profiler (basic support).

.V8 perf-basic-prof-only-functions
Only report function code ranges to perf (i.e. no stubs).

.V8 perf-prof
Enable perf Linux profiler (experimental annotate support).

.V8 perf-prof-unwinding-info
Enable unwinding info for perf Linux profiler (experimental).

.V8 no-polymorphic-inlining
Disable polymorphic inlining.

.V8 predictable
Enable predictable mode.

.V8 predictable-gc-schedule
Predictable garbage collection schedule.
Fixes heap growing, idle, and memory reducing behavior.

.V8 prepare-always-opt
Prepare for turning on always opt.

.V8 print-all-exceptions
Print exception object and stack trace on each thrown exception.

.V8 print-bytecode
Print bytecode generated by ignition interpreter.

.V8 print-bytecode-filter | String \(lq*\(rq
Filter for selecting which functions to print bytecode.

.V8 print-deopt-stress
Print number of possible deopt points.

.V8 print-opt-source
Print source code of optimized and inlined functions.

.V8 print-wasm-code
Print WebAssembly code.

.V8 print-wasm-stub-code
Print WebAssembly stub code.

.V8 prof
Log statistical profiling information (implies \*(C!--log-code\fP).

.V8 no-prof-browser-mode
Turn off browser-compatible mode when profiling with \*(C!--prof\fP.

.V8 prof-cpp
Like \*(C!--prof\fP, but ignore generated code.

.V8 prof-sampling-interval | Int 1000
Interval for \*(C!--prof\fP samples (in microseconds).

.V8 profile-deserialization
Print the time it takes to deserialize the snapshot.

.V8 random-gc-interval | Int 0
Collect garbage after \*(CBrandom\fP\*(CW(0,\fP
.VAR X )
allocations.
It overrides \*(C!--gc-interval\fP.

.V8 random-seed | Int 0
Default seed for initializing random generator (0, the default, means to use system random).

.V8 no-randomize-hashes
Don\(cqt randomize hashes to avoid predictable hash collisions (with snapshots this option cannot override the baked-in seed).

.V8 redirect-code-traces
Output deopt information and disassembly into file
.RI \(lqcode- pid - isolate-id .asm.\(rq

.V8 redirect-code-traces-to | String NULL
Output deopt information and disassembly into the given file.

.V8 regexp-interpret-all
Interpret all regexp code.

.V8 regexp-mode-modifiers
Enable inline flags in regexp.

.V8 no-regexp-optimization
Don\(cqt generate optimized regexp code.

.V8 no-rehash-snapshot
Don\(cqt rehash strings from the snapshot to override the baked-in seed.

.V8 reserve-inline-budget-scale-factor | Float 1.2
Maximum cumulative size of bytecode considered for inlining.

.V8 retain-maps-for-n-gc | Int 2
Keeps maps alive for
.VAR N
old space garbage collections.

.V8 runtime-call-stats
Report runtime call counts and times.

.V8 sampling-heap-profiler-suppress-randomness
Use constant sample intervals to eliminate test flakiness.

.V8 no-script-streaming
Disable parsing on background.

.V8 semi-space-growth-factor | Int 2
Factor by which to grow the new space.

.V8 serialization-chunk-size | Uint 4096
Custom size for serialization chunks.

.V8 serialization-statistics
Collect statistics on serialized objects.

.V8 sim-stack-alignment | Int 8
Stack alignment in bytes in simulator (4 or 8, 8 is default).

.V8 sim-stack-size | Int 2048
Stack size of the ARM64, MIPS64 and PPC64 simulator in kBytes (default is 2 MB).

.V8 single-threaded
Disable the use of background tasks.

.V8 stack-size | Int 984
Default size of stack region v8 is allowed to use (in kBytes).

.V8 stack-trace-limit | Int 10
Number of stack frames to capture.

.V8 stack-trace-on-illegal
Print stack trace when an illegal exception is thrown.

.V8 startup-blob | String NULL
Write V8 startup blob file.
(\*(C!mksnapshot\fP only).

.V8 startup-src | String NULL
Write V8 startup as \*(C+ src.
(\*(C!mksnapshot\fP only).

.V8 stop-sim-at | Int 0
Simulator stop after
.VAR X
number of instructions.

.V8 stress-compaction
Stress the GC compactor to flush out bugs (implies \*(C!--force-marking-deque-overflows\fP).

.V8 stress-compaction-random
Stress GC compaction by selecting random percent of pages as evacuation candidates.
It overrides \*(C!--stress-compaction\fP.

.V8 stress-flush-bytecode
Stress bytecode flushing.

.V8 stress-gc-during-compilation
Simulate GC/compiler thread race related to
.LK "https://crbug.com/v8/8520" .

.V8 stress-incremental-marking
Force incremental marking for small heaps and run it more often.

.V8 stress-inline
Set high thresholds for inlining to inline as much as possible.

.V8 stress-lazy-source-positions
Collect lazy source positions immediately after lazy compilation.

.V8 stress-marking | Int 0
Force marking at random points between 0 and
.VAR X
(inclusive) percent of the regular marking start limit.

.V8 stress-runs | Int 0
Number of stress runs.

.V8 stress-sampling-allocation-profiler | Int 0
Enable sampling allocation profiler with
.VAR X
as a sample interval.

.V8 stress-scavenge | Int 0
Force scavenge at random points between 0 and
.VAR X
(inclusive) percent of the new space capacity.

.V8 stress-validate-asm
Try to validate everything as asm.js.

.V8 stress-wasm-code-gc
Stress-test garbage collection of WASM code.

.V8 suppress-asm-messages
Don\(cqt emit asm.js related messages (for golden file testing).

.V8 target-arch | String NULL
The \*(C!mksnapshot\fP target architecture.
(\*(C!mksnapshot\fP only).

.V8 target-os | String NULL
The \*(C!mksnapshot\fP target OS.
(\*(C!mksnapshot\fP only).

.V8 test-small-max-function-context-stub-size
Enable testing the function context size overflow path by making the maximum size smaller.

.V8 testing-float-flag | Float 2.5
Float-flag.

.V8 testing-int-flag | Int 13
Testing_int_flag.

.V8 testing-maybe-bool-flag | maybe_bool unset
Testing_maybe_bool_flag.

.V8 testing-prng-seed | Int 42
Seed used for threading test randomness.

.V8 testing-string-flag | String \(lqHello,\~world!\(rq
String-flag.

.V8 no-thin-strings
Disable ThinString support.

.V8 trace
Trace function calls.

.V8 trace-all-uses
Trace all use positions.

.V8 trace-allocation-stack-interval | Int -1
Print stack trace after
.VAR N
free-list allocations.

.V8 trace-asm-parser
Verbose logging of asm.js parse failures.

.V8 trace-asm-scanner
Log tokens encountered by asm.js scanner.

.V8 trace-asm-time
Log asm.js timing info to the console.

.V8 trace-block-coverage
Trace collected block coverage information.

.V8 trace-compiler-dispatcher
Trace compiler dispatcher activity.

.V8 trace-concurrent-marking
Trace concurrent marking.

.V8 trace-concurrent-recompilation
Track concurrent recompilation.

.V8 trace-deopt
Trace optimize function deoptimization.

.V8 trace-detached-contexts
Trace native contexts that are expected to be garbage collected.

.V8 trace-duplicate-threshold-kb | Int 0
Print duplicate objects in the heap if their size is more than given threshold.

.V8 trace-environment-liveness
Trace liveness of local variable slots.

.V8 trace-evacuation
Report evacuation statistics.

.V8 trace-evacuation-candidates
Show statistics about the pages evacuation by the compaction.

.V8 trace-file-names
Include file names in trace-opt/trace-deopt output.

.V8 trace-for-in-enumerate
Trace for-in enumerate slow-paths.

.V8 trace-fragmentation
Report fragmentation for old space.

.V8 trace-fragmentation-verbose
Report fragmentation for old space (detailed).

.V8 trace-gc
Print one trace line following each garbage collection.

.V8 trace-gc-freelists
Print details of each freelist before and after each major garbage collection.

.V8 trace-gc-freelists-verbose
Print details of freelists of each page before and after each major garbage collection.

.V8 trace-gc-ignore-scavenger
Do not print trace line after scavenger collection.

.V8 trace-gc-nvp
Print one detailed trace line in name=value format after each garbage collection.

.V8 trace-gc-object-stats
Trace object counts and memory usage.

.V8 trace-gc-verbose
Print more details following each garbage collection.

.V8 trace-generalization
Trace map generalization.

.V8 trace-heap-broker
Trace the heap broker (reports on missing data only).

.V8 trace-heap-broker-verbose
Trace the heap broker verbosely (all reports).

.V8 trace-ic
Trace inline cache state transitions for tools/ic-processor.

.V8 trace-idle-notification
Print one trace line following each idle notification.

.V8 trace-idle-notification-verbose
Print the heap state used by the idle notification.

.V8 trace-ignition-codegen
Trace the codegen of ignition interpreter bytecode handlers.

.V8 trace-ignition-dispatches
Traces the dispatches to bytecode handlers by the ignition interpreter.

.V8 trace-ignition-dispatches-output-file | String NULL
The file to which the bytecode handler dispatch table is written (by default, the table is not written to a file).

.V8 trace-incremental-marking
Trace progress of the incremental marking.

.V8 trace-maps
Trace map creation.

.V8 no-trace-maps-details
Don\(cqt log map details.

.V8 trace-migration
Trace object migration.

.V8 trace-minor-mc-parallel-marking
Trace parallel marking for the young generation.

.V8 trace-mutator-utilization
Print mutator utilisation, allocation speed, GC speed.

.V8 trace-opt
Trace lazy optimization.

.V8 trace-opt-stats
Trace lazy optimization statistics.

.V8 trace-opt-verbose
Extra verbose compilation tracing.

.V8 trace-osr
Trace on-stack replacement.

.V8 trace-parallel-scavenge
Trace parallel scavenge.

.V8 trace-pretenuring
Trace pretenuring decisions of HAllocate instructions.

.V8 trace-pretenuring-statistics
Trace allocation site pretenuring statistics.

.V8 trace-protector-invalidation
Trace protector cell invalidations.

.V8 trace-prototype-users
Trace updates to prototype user tracking.

.V8 trace-rail
Trace RAIL mode.

.V8 trace-representation
Trace representation types.

.V8 trace-serializer
Print code serializer trace.

.V8 trace-side-effect-free-debug-evaluate
Print debug messages for side-effect-free debug-evaluate for testing.

.V8 trace-sim
Trace simulator execution.

.V8 trace-sim-messages
Trace simulator debug messages.
Implied by \*(C!--trace-sim\fP.

.V8 trace-store-elimination
Trace store elimination.

.V8 trace-stress-marking
Trace stress marking progress.

.V8 trace-stress-scavenge
Trace stress scavenge progress.

.V8 trace-track-allocation-sites
Trace the tracking of allocation sites.

.V8 trace-turbo
Trace generated TurboFan IR.

.V8 trace-turbo-alloc
Trace TurboFan\(cqs register allocator.

.V8 trace-turbo-ceq
Trace TurboFan\(cqs control equivalence.

.V8 trace-turbo-cfg-file | String NULL
Trace turbo cfg graph (for C1 visualizer) to a given file name.

.V8 trace-turbo-filter | String \(lq*\(rq
Filter for tracing turbofan compilation.

.V8 trace-turbo-graph
Trace generated TurboFan graphs.

.V8 trace-turbo-inlining
Trace TurboFan inlining.

.V8 trace-turbo-jt
Trace TurboFan\(cqs jump threading.

.V8 trace-turbo-load-elimination
Trace TurboFan load elimination.

.V8 trace-turbo-loop
Trace TurboFan\(cqs loop optimizations.

.V8 trace-turbo-path | String NULL
Directory to dump generated TurboFan IR to.

.V8 trace-turbo-reduction
Trace TurboFan\(cqs various reducers.

.V8 trace-turbo-scheduled
Trace TurboFan IR with schedule.

.V8 trace-turbo-scheduler
Trace TurboFan\(cqs scheduler.

.V8 trace-turbo-trimming
Trace TurboFan\(cqs graph trimmer.

.V8 no-trace-turbo-types
Don\(cqt trace TurboFan\(cqs types.

.V8 trace-unmapper
Trace the unmapping.

.V8 trace-verify-csa
Trace code stubs verification.

.V8 trace-wasm-ast-end | Int 0
End function for WASM AST trace (exclusive).

.V8 trace-wasm-ast-start | Int 0
Start function for WASM AST trace (inclusive).

.V8 trace-wasm-code-gc
Trace garbage collection of WASM code.

.V8 trace-wasm-memory
Print all memory updates performed in WASM code.

.V8 trace-wasm-serialization
Trace serialization/deserialization.

.V8 trace-zone-stats
Trace zone memory usage.

.V8 no-track-computed-fields
Don\(cqt track computed boilerplate fields.

.V8 no-track-detached-contexts
Don\(cqt track native contexts that are expected to be garbage collected.

.V8 no-track-double-fields
Don\(cqt track fields with double values.

.V8 no-track-field-types
Don\(cqt track field types.

.V8 no-track-fields
Don\(cqt track fields with only SMI values.

.V8 track-gc-object-stats
Track object counts and memory usage.

.V8 no-track-heap-object-fields
Don\(cqt track fields with heap values.

.V8 track-retaining-path
Enable support for tracking retaining path.

.V8 no-turbo-allocation-folding
Disable TurboFan allocation folding.

.V8 no-turbo-cf-optimization
Don\(cqt optimize control flow in TurboFan.

.V8 turbo-control-flow-aware-allocation
Consider control flow while allocating registers.

.V8 no-turbo-escape
Disable escape analysis.

.V8 turbo-filter | String \(lq*\(rq
Optimization filter for TurboFan compiler.

.V8 no-turbo-inline-array-builtins
Don\(cqt inline array builtins in TurboFan code.

.V8 no-turbo-inlining
Disable inlining in TurboFan.

.V8 turbo-instruction-scheduling
Enable instruction scheduling in TurboFan.

.V8 no-turbo-jt
Disable jump threading in TurboFan.

.V8 no-turbo-load-elimination
Disable load elimination in TurboFan.

.V8 no-turbo-loop-peeling
Disable TurboFan loop peeling.

.V8 no-turbo-loop-rotation
Disable TurboFan loop rotation.

.V8 no-turbo-loop-variable
Disable TurboFan loop variable optimisation.

.V8 no-turbo-move-optimization
Don\(cqt optimize gap moves in TurboFan.

.V8 turbo-profiling
Enable profiling in TurboFan.

.V8 no-turbo-rewrite-far-jumps
Don\(cqt rewrite far to near jumps (ia32,x64).

.V8 turbo-sp-frame-access
Use stack pointer-relative access to frame wherever possible.

.V8 no-turbo-splitting
Don\(cqt split nodes during scheduling in TurboFan.

.V8 turbo-stats
Print TurboFan statistics.

.V8 turbo-stats-nvp
Print TurboFan statistics in machine-readable format.

.V8 turbo-stats-wasm
Print TurboFan statistics of WASM compilations.

.V8 no-turbo-store-elimination
Disable store-store elimination in TurboFan.

.V8 turbo-stress-instruction-scheduling
Randomly schedule instructions to stress dependency tracking.

.V8 turbo-verify
Verify TurboFan graphs at each phase.

.V8 turbo-verify-allocation
Verify register allocation in TurboFan.

.V8 turbo-verify-machine-graph | String NULL
Verify TurboFan machine graph before instruction selection.

.V8 no-unbox-double-arrays
Don\(cqt automatically unbox arrays of doubles.

.V8 untrusted-code-mitigations
Enable mitigations for executing untrusted code.

.V8 use-external-strings
Use external strings for source code.

.V8 no-use-ic
Don\(cqt use inline caching.

.V8 no-use-idle-notification
Don\(cqt use idle notification to reduce memory footprint.

.V8 no-use-marking-progress-bar
Don\(cqt use a progress bar to scan large objects in increments when incremental marking is active.

.V8 no-use-osr
Don\(cqt use on-stack replacement.

.V8 use-strict
Enforce strict mode.

.V8 no-use-verbose-printer
Disable verbose printing.

.V8 v8-os-page-size | Int 0
Override OS page size (in KBytes).

.V8 no-validate-asm
Don\(cqt validate asm.js modules before compiling.

.V8 no-wasm-async-compilation
Disable actual asynchronous compilation for
.JS WebAssembly.compile .

.V8 no-wasm-code-gc
Disable garbage collection of WASM code.

.V8 wasm-disable-structured-cloning
Disable WASM structured cloning.

.V8 wasm-fuzzer-gen-test
Generate a test case when running a WASM fuzzer.

.V8 wasm-grow-shared-memory
Allow growing shared WebAssembly memory objects.

.V8 wasm-interpret-all
Execute all WASM code in the WASM interpreter.

.V8 wasm-lazy-compilation
Enable lazy compilation for all WASM modules.

.V8 wasm-lazy-validation
Enable lazy validation for lazily-compiled WASM functions.

.V8 no-wasm-math-intrinsics
Don\(cqt intrinsify some Math imports into WASM.

.V8 wasm-max-code-space | Uint 1024
Maximum committed code space for WASM (in MB).

.V8 wasm-max-mem-pages | Uint 32767
Maximum number of 64KiB memory pages of a WASM instance.

.V8 wasm-max-table-size | Uint 10000000
Maximum table size of a WASM instance.

.V8 wasm-no-bounds-checks
Disable bounds checks (performance testing only).

.V8 wasm-no-stack-checks
Disable stack checks (performance testing only).

.V8 wasm-num-compilation-tasks | Int 10
Number of parallel compilation tasks for WASM.

.V8 wasm-opt
Enable WASM optimization.

.V8 no-wasm-shared-code
Don\(cqt share code underlying a WASM module when it is transferred.

.V8 no-wasm-shared-engine
Don\(cqt share one WASM engine between all isolates within a process.

.V8 wasm-test-streaming
Use streaming compilation instead of async compilation for tests.

.V8 wasm-tier-mask-for-testing | Int 0
Bitmask of functions to compile with TurboFan instead of Liftoff.

.V8 no-wasm-tier-up
Disable WASM baseline compilation and tier up to the optimizing compiler.

.V8 no-wasm-trap-handler
Don\(cqt use signal handlers to catch out of bounds memory access in WASM (currently Linux x86_64 only).

.V8 wasm-write-protect-code-memory
Write protect code memory on the WASM native heap.

.V8 no-win64-unwinding-info
Disable unwinding info for Windows/x64.

.V8 no-write-protect-code-memory
Don\(cqt write protect code memory.

.V8 no-young-generation-large-objects
Don\(cqt allocate large objects by default in the young generation large object space.
.\" END SCRAPE

.SH SEE ALSO
.BR node (1)

.SH AUTHORS
Copyright \(co 2014, the V8 project authors.
All rights reserved.
.
.PP
Manpage adaption and programming copyright \(co 2016-2019,
.MT gardnerjohng@gmail.com
Alhadis
.ME .
All rights reserved.
Released under the ISC license.
