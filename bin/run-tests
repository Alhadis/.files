#!/bin/sh
#
# Run automated tests
#

have(){
	while [ $# -gt 0 ]; do
		command -v "$1" 2>&1 >/dev/null || return 1
		shift
	done
}

# Nroff without trailing lines
[ -f test.roff ] && have groff && {
	groff -tpUTutf8 $@ < test.roff | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'
	exit
}

# Run JavaScript tests with native module support
[ -f test.mjs ] && have node && {
	node --experimental-modules test.mjs "$@"
	exit
}

# TypeScript
have ts-node && {
	[ -f test.ts  ] && { ts-node test.ts  "$@"; exit; }
	[ -f test.tsx ] && { ts-node test.tsx "$@"; exit; }
}


# Run test-scripts in current directory
[ -f test.sh ] && {      ./test.sh "$@"; exit; }
[ -f test.pl ] && { perl ./test.pl "$@"; exit; }
[ -f test.rb ] && { ruby ./test.rb "$@"; exit; }
[ -f test.js ] && { node ./test.js "$@"; exit; }

# Makefile: "make test" (GNU Make only)
[ -f Makefile ] && grep Makefile -qe ^test: && {
	if have gmake; then
		gmake test
		exit
	elif make --version 2>/dev/null | grep -q GNU; then
		make test
		exit
	fi
}

# Atom
[ -d spec ] && have atom && {
	atom -t spec;
	exit;
}

# Atom + Mocha
[ -d test ] && [ -d node_modules/atom-mocha ] && have atom mocha && {
	atom -t test;
	exit;
}

# Mocha
[ -d test ] && have mocha && {
	mocha
	exit
}

# Unknown executable assumed to be a test-script
[ -x test ] && [ -f test ] && { ./test "$@"; exit; }

# No tests found; do nothing
true
