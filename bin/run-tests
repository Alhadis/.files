#!/bin/sh

#
# run-tests: Run test-scripts in the current directory
#

have(){
	while [ $# -gt 0 ]; do
		command -v "$1" >/dev/null 2>&1 || return 1
		shift
	done
}

# Nroff without trailing lines
# shellcheck disable=SC2068
[ -f test.roff ] && have groff && \
	exec groff -tpUTutf8 $@ test.roff | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'


# FontForge without annoying license banner
[ -f test.ff ] && have fontforge && {
	set -- -quiet -lang=ff -script test.ff "$@"
	case `fontforge -quiet -c 0 2>&1` in *Copyright*)
		exec 3>&1
		{ fontforge "$@" 2>&1 >&3 3>&- || exit $?; } \
		| sed -n '/^Copyright/,/^ Based on/!p' 3>&-
		exec 3>&- # https://youtu.be/BLUkgRAy_Vo
		exit
	;; esac
	exec fontforge -lang=ff -script test.ff "$@"
}

# TypeScript
have ts-node && {
	export TS_NODE_COMPILER_OPTIONS='{"jsx": "react", "target": "esnext", "noEmit": true}'
	[ -f test.tsx ] && exec ts-node test.tsx "$@"
	[ -f test.ts  ] && exec ts-node test.ts  "$@"
}

# WebAssembly
have wasmtime && {
	[ -f test.wat  ] && exec wasmtime test.wat  "$@"
	[ -f test.wast ] && exec wasmtime test.wast "$@"
}

# PostScript
[ -f test.ps ] && have gs && \
	exec gs -sDEVICE=txtwrite -sOutputFile=- -q -sBATCH -dNOPAUSE -dNOSAFER -I. -- test.ps "$@"

# PowerShell
[ -f test.ps1 ] && have pwsh && \
	exec pwsh -File test.ps1 "$@"

# AppleScript
[ -f test.scpt ] && have osascript && \
	exec osascript -l AppleScript test.scpt "$@"

# Haskell
[ -f test.hs ] && have ghc runghc && \
	exec runghc test.hs "$@"

# Emacs Lisp
[ -f test.el ] && have emacs && \
	exec emacs --script test.el "$@"

# Various other programming languages
[ -f test.awk ] && exec awk -f test.awk
[ -f test.lua ] && exec lua ./test.lua "$@"
[ -f test.tcl ] && exec tclsh test.tcl "$@"
[ -f test.sh  ] && exec      ./test.sh "$@"
[ -f test.pl  ] && exec perl ./test.pl "$@"
[ -f test.rb  ] && exec ruby ./test.rb "$@"
[ -f test.js  ] && exec node ./test.js "$@"

# JavaScript with native module support
[ -f test.mjs ] && have node && \
	exec node --experimental-modules test.mjs "$@"

# Makefile: "make test" (GNU Make only)
[ -f Makefile ] && grep Makefile -qe ^test: && {
	if have gmake; then
		exec gmake test
	elif make --version 2>/dev/null | grep -q GNU; then
		exec make test
	fi
}

# Rakefile
[ -f Rakefile ] && have bundle rake && {
	# shellcheck disable=SC2145
	[ -f "$1" ] && case $1 in *.rb) set -- "TEST=$@";; esac
	LANG=en_AU.UTF-8 exec bundle exec rake test "$@"
}

# Atom
[ -d spec ] && have atom && \
	exec atom -t spec

# Atom + Mocha
[ -d test ] && [ -d node_modules/atom-mocha ] && have atom mocha && \
	exec atom -t test

# Mocha
[ -d test ] && have mocha && \
	exec mocha

# C: Compile, run, delete
[ -f test.c ] && {
	cc -o test.c.tmp test.c || exit $?
	./test.c.tmp "$@"
	set -- $?
	rm -f ./test.c.tmp
	exit "$1"
}

# V: Compile, run, delete
[ -f test.v ] && have v && {
	v -o test.v.tmp test.v
	./test.v.tmp "$@"
	set -- $?
	rm -f ./test.v.tmp
	exit "$1"
}

# Unknown executable assumed to be a test-script
[ -x test ] && [ -f test ] && exec ./test "$@"

# No tests found; do nothing
true
