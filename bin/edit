#!/usr/bin/env perl
use strict;
use warnings;
use autodie;
use Getopt::Long qw(:config auto_abbrev bundling);

# Read a file's entire content into memory
sub slurp {
	my $data;
	my $name = $_[0];
	local $/=undef;
	open(FILE, $name);
	while(<>){ $data = $_; }
	close FILE;
	return $data;
}

# Pluck -e args from command-line
my @expr = ();
my $verbose = undef;
GetOptions("e|expr=s" => \@expr, "v|verbose" => \$verbose);

for (@ARGV) {
	my $file = $_;
	my $input = slurp $file;
	$_ = $input;
	foreach my $re (@expr){ eval $re; }
	
	# Only write to file if a change was made
	if($input ne (my $output = $_)){
		no warnings;
		open(FILE, ">", $file);
		print FILE $output;
		close(FILE);
	}
	elsif ($verbose) {
		print "File unchanged: $file\n";
	}
}
